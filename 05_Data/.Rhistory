library(tidyverse)
mpg <- ggplot::mpg
mpg <- ggplot2::mpg
ggplot(data= mpg) + geom_poimt(mapping= aes(color= displ < 5))
ggplot(data= mpg) + geom_point(mapping= aes(color= displ < 5))
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwycolor= displ < 5))
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy, color= displ < 5))
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy, color= displ > 5))
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy, color= displ < 5))
?mpg
?geom_point
#Top
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy, alpha= class))
#Facets
ggplot(data= mpg) + geom_point(mapping= aes(x=displ, y= hwy))+
facet_wrap(~class, nrow= 2)
View(mpg)
?mpg
#Facets: Plotting two variables
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(drv ~ cyl)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(. ~ cyl)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(drv)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~drv)
ggplot(data= mpg) + geom_point(mapping= aes(x= drv, y= cyl))
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(drv ~ .)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(. ~ cyl)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(drv ~ .)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_grid(.~ cyl)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~ class, nrow= 2)
?facet_wrap
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~ class)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~ class, nrow= 3)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~ class, nrow= 4)
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy)) +
facet_wrap(~ class, nrow= 2)
library(tidyverse)
mpg <- ggplot2::mpg
#Geometric Objects
ggplot(data= mpg) + geom_point(mapping= aes(x= displ, y= hwy))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, linetype= drv))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, linetype= drv)) +
geom_point(mapping= aes(x= displ, y= hwy))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, linetype= drv)) +
geom_point(mapping= aes(x= displ, y= hwy, color= drv))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, linetype= drv, color= drv)) +
geom_point(mapping= aes(x= displ, y= hwy, color= drv))
ggplot(data= mpg) + geom_smppth(mapping= aes(x= displ, y= hwy, group= drv))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, group= drv))
ggplot(data= mpg) + geom_smooth(mapping= aes(x= displ, y= hwy, color= drv), show.legend= FALSE)
?show.legend
ggplot(data= mpg, mapping= aes(x= displ, y= hwy)) +
geom_point() + geom_smooth()
#Plotting the same graph in different ways, second code saves time and is much better
ggplot(data= mpg)+ geom_pont(mapping= aes(x= displ, y= hwy))+
geom_smooth(mapping= aes(x= displ, y= hwy))
#Plotting the same graph in different ways, second code saves time and is much better
ggplot(data= mpg)+ geom_point(mapping= aes(x= displ, y= hwy))+
geom_smooth(mapping= aes(x= displ, y= hwy))
ggplot(data= mpg, mapping= aes(x= displ, y= hwy)) +
geom_point() + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy))+
geom_point(mapping= aes(color= class)) + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy, color= class))+
geom_point() + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy)) +
geom_point() + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy)) +
geom_point() + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy))+
geom_point(mapping= aes(color= class)) + geom_smooth()
ggplot(data= mpg, mapping= aes(x= displ, y= hwy))+
geom_point(mapping= aes(color= class)) +
geom_smooth(data= filter(mpg, class == "subcmpact"), se = FALSE)
ggplot(data= mpg, mapping= aes(x= displ, y= hwy))+
geom_point(mapping= aes(color= class)) +
geom_smooth(data= filter(mpg, class == "subcmpact"), se = FALSE)
ggplot(data= mpg, mapping= aes(x= displ, y= hwy))+
geom_point(mapping= aes(color= class)) +
geom_smooth(data= filter(mpg, class == "midsize"), se = FALSE)
library(tidyverse)
mpg <- ggplot2::mpg
diamonds <- ggplot2::diamonds
#geom_bar: graph
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut))
ggplot(data= diamonds) + stat_count(mapping= aes(x= cut))
?geom_bar()
library(tidyverse)
demo <- tribble(
~a     ~b
"height_1", 20,
demo <- tribble(
~a     ~b,
"height_1", 20,
"height_2", 30,
"height_3", 40
)
demo <- tribble(
~a,     ~b,
"height_1", 20,
"height_2", 30,
"height_3", 40
)
ggplot(data= demo) + geom_bar(mapping= aes(x= a, y= b), stat= identity)
ggplot(data= demo) + geom_bar(mapping= aes(x= a, y= b), stat= "identity")
ggplot(data= demo) + geom_bar(mapping= aes(x= a, y= b, stat= "identity"))
demo <- tibble(
~a,     ~b,
"height_1", 20,
"height_2", 30,
"height_3", 40
)
diamonds <- ggplot2::diamonds
View(diamonds)
?diamonds
#Chart of proportion instead of count
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y=..prop.., group= 1))
#Chart of proportion instead of count
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y= after_stat(prop), group= 1))
#Chart of proportion instead of count
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y= after_stat(prop), group= 2))
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y= after_stat(prop)))
?group
?geom_bar()
#draw greater attention to statistical transformation
ggplot(mapping= diamonds) + stat_summary(
mapping= aes(x= cut, y= depth),
fun.ymin= min,
fun.ymax= max,
fun.ymedian
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= depth),
fun.ymin= min,
fun.ymax= max,
fun.ymedian
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= depth),
fun.min= min,
fun.max= max,
fun.ymedian
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= depth),
fun.min= min,
fun.max= max,
fun.y= median
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= depth),
fun.min= min,
fun.max= max,
fun= median
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= price),
fun.min= min,
fun.max= max,
fun= median
)
#draw greater attention to statistical transformation
ggplot(data= diamonds) + stat_summary(mapping= aes(x= cut, y= depth),
fun.min= min,
fun.max= max,
fun= median
)
?fun
?fun
#ggplot2: 20 stats
?stat_bin
library(tidyverse)
diamonds <- ggplot2::diamonds
#When condition "group= 1" is not included in the code, the graph is useless
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y= after_stat(prop)))
#Chart of proportion instead of count
ggplot(data= diamonds) +
geom_bar(mapping= aes(x= cut, y= after_stat(prop), group= 1))
ggplot(data= diamonds) +geom_col(mapping= aes(x= cut, y= depth))
?geom_col
geom_col(
mapping = NULL,
data = NULL,
position = "stack",
...,
just = 0.5,
width = NULL,
na.rm = FALSE,
show.legend = NA,
inherit.aes = TRUE)
geom_col(
mapping = NULL,
data = NULL,
position = "stack",
just = 0.5,
width = NULL,
na.rm = FALSE,
show.legend = NA,
inherit.aes = TRUE)
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, y= after_stat(prop)))
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= color, y= after_stat(prop)))
#Position Adjustments
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= color))
#Position Adjustments
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, color= cut))
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= cut))
ggplot(data= diamonds) + geom_bar(x= cut, fill= clarity)
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= clarity))
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= clarity)
) +
geom_bar(alpha= 1/5, position= "identity")
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= clarity)
) +
geom_bar(alpha= 1/5, position= "identity")
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= clarity)
) +
geom_bar(x= cut, alpha= 1/5, position= "identity")
ggplot(data= diamonds, mapping= aes(x= cut, fill= clarity)
) +
geom_bar(alpha= 1/5, position= "identity")
ggplot(data= diamonds, mapping= aes(x= cut, color= clarity)
) +
geom_bar(fill= NA, position= "identity")
ggplot(data= diamonds) + geom_bar(mapping= aes(x= cut, fill= clarity), position= "fill")
library(ggplot2)
library(gridExtra)
library(tidyr)
library(dplyr)
setwd("C:/Users/Rasek/Dropbox/Analysis/Ch2Stats/05_Data")
position_weight <- read.csv("positionAndWeight3.csv")
Gender_status3 %>%
dplyr::select(Zweight, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Set2")
position_weight %>%
dplyr::select(Zweight, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Set2")
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Set2")
#Status 2
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Paired")
#Status 2
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="set1")
#Status 2
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="set3")
#Status 2
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Set3")
#Status 2
position_weight %>%
dplyr::select(zWeightID, Age, front, back, side, center) %>%
pivot_longer(
cols=c("front", "back", "side", "center"),
names_to = c("position"),
values_to = "proportionTime") %>%
group_by(Age, position) %>% summarise(meanProp=mean(proportionTime, na.rm=TRUE)) %>%
ggplot(aes(x=Age, y=meanProp, fill= position)) + geom_bar(stat="identity", position= "fill")+
scale_fill_brewer(palette="Set4")
